package {		/* ****************************************************** *\	* 	OPEN SOURCE FLASH VIDEO PLAYER	* 		* 	Preview/Generator:	* 	  http://www.flashjunior.ch/archiv/flvplayer/2/	* 		* 	Source/Code:	* 	  http://github.com/FlashJunior/OSFlashVideoPlayer	* 		* 	Author:	* 	  Martin Bommeli	* 	  http://www.flashjunior.ch	* 		* 	Original graphics and some part of codes:	* 	  Abdulhalim Kara	* 	  http://www.abdulhalimkara.com/	*	\* ****************************************************** */		import flash.system.Security;		import flash.display.MovieClip;	import flash.events.Event;	import com.moogaloop.VimeoPlayer;			import com.gskinner.utils.StringUtils;		import com.fj.utils.StopDragButton;	import com.fj.video.VideoPlayer;		import nl.demonsters.debugger.MonsterDebugger;	public class OSFlashVideoPlayer extends MovieClip{				private var videoMovie:*;		private var debugger:MonsterDebugger;				public function OSFlashVideoPlayer(){			if(loaderInfo.bytesLoaded >= loaderInfo.bytesTotal){				init();			}else{				loaderInfo.addEventListener(Event.COMPLETE, init, false, 0, true);			}		}				private function init(e:Event = null):void {					Security.allowDomain("*");						debugger = new MonsterDebugger(this);			MonsterDebugger.enabled = false;			MonsterDebugger.clearTraces();						MonsterDebugger.trace(this, "OSFlashVideoPlayer - init");			loaderInfo.removeEventListener(Event.COMPLETE, init);			addEventListener(Event.ADDED_TO_STAGE, initPlayer);		}				private function initPlayer(e:Event):void {			removeEventListener(Event.ADDED_TO_STAGE, initPlayer);			            stage.scaleMode = flash.display.StageScaleMode.NO_SCALE;            stage.align = flash.display.StageAlign.TOP_LEFT;						VideoPlayer.STAGE = StopDragButton.STAGE = stage;						var videoSrc:String = stage.loaderInfo.parameters["movie"];			//!videoSrc ? videoSrc = "http://www.flashjunior.ch/archiv/flvplayer/movies/sad.flv" : videoSrc = videoSrc;			//!videoSrc ? videoSrc = "http://www.flashjunior.ch/archiv/flvplayer/movies/kuga.mp4" : videoSrc = videoSrc;			//!videoSrc ? videoSrc = "http://www.youtube.com/watch?v=YFa59lK-kpo" : videoSrc = videoSrc;			//!videoSrc ? videoSrc = "http://www.youtube.com/v/XrPNl_gZlvY" : videoSrc = videoSrc;			!videoSrc ? videoSrc = "http://vimeo.com/7917744" : videoSrc = videoSrc;						var regex:RegExp;			var regexResult:*;						if(StringUtils.contains(videoSrc, "youtube.com")){				regex = RegExp("http://www.youtube.com/v/(.+?)(\&.*|$)");				regexResult = regex.exec(videoSrc);				var youtubeCheck:Boolean = false;								if(regexResult){					videoSrc = regexResult[1].toString();					youtubeCheck = true;				}else{					regex = /youtube\.com\/watch\?v=([^&\/]+)/;					regexResult = regex.exec(videoSrc);					if(regexResult){						videoSrc = regexResult[1].toString();						youtubeCheck = true;					}				}								videoMovie = new VideoPlayer(videoSrc, "youtube");														} else if(StringUtils.contains(videoSrc, "vimeo.com")){				regex = RegExp("http://vimeo.com/(.+?)(\&.*|$)");				regexResult = regex.exec(videoSrc);				var vimeoCheck:Boolean = false;				if(regexResult){					videoSrc = regexResult[1].toString();					vimeoCheck = true;				}				//videoMovie = new VideoPlayer(videoSrc, "vimeo");								videoMovie = new VimeoPlayer(int(videoSrc), stage.stageWidth, stage.stageHeight);				videoMovie.addEventListener(Event.COMPLETE, handleVimeoPlayerReady);			} else{				videoMovie = new VideoPlayer(videoSrc, "normal");			}						addChild(videoMovie);		}				private function handleVimeoPlayerReady(e:Event):void {			if(loaderInfo.parameters.autoplay == "true"){videoMovie.play();}						if(loaderInfo.parameters["color_seekbar"]){videoMovie.changeColor(loaderInfo.parameters["color_seekbar"].substr(2));}		}	}}